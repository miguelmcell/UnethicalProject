{"version":3,"sources":["logo.svg","pages/LandingPage.js","pages/About.js","components/Navbar.jsx","pages/Page1.js","pages/Page2.js","pages/Maintainance.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LandingPage","className","style","top","fontSize","fontFamily","class","Component","About","props","state","total_issues","total_commits","Navbar","searchValues","handleSearchChange","bind","handleSearchSubmit","event","this","setState","target","value","console","log","history","push","pathname","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","welcome","handleSubmit","handleChange","evt","preventDefault","fetch","then","response","json","users","length","width","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","Button","variant","App","exact","path","component","Page1","Page2","Maintainance","withRouter","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17bffac1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import './LandingPage.css'\nimport React, {Component} from 'react';\n\nexport default class LandingPage extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\n\t\t\t\t\t<div className=\"container text-center\" style={{top: '450px'}}>\n\t\t\t\t\t\t<h1 style={{fontSize:'60px',fontFamily: 'Varela',top: '180px'}}>Welcome!</h1>\n\t\t\t\t\t\t<p1 class=\"text-center\" style={{fontSize:'20px',fontFamily: 'Varela',top: '260px'}}>\n\t\t\t\t\t\tTest\n\t\t\t\t\t\t</p1>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, {\n\tComponent\n} from 'react';\n\nimport {Container,Row,Col} from 'react-bootstrap';\n// import requests from '../util/requests.js';\nimport {\n\tdeclareTypeAlias\n} from '@babel/types';\n\nexport default class About extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttotal_issues: 0,\n\t\t\ttotal_commits: 0,\n\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// this.getAllCommits(axios)\n\t\t// this.getAllIssues(axios);\n\t\t// this.getUserIssues(axios)\n\t\t// this.getUserCommits(axios);\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"container text-center\">\n\t\t\t\t\t<h1 className=\"text-center\">About Us</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, {Component} from 'react'\n\nexport default class Navbar extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            // search values\n\t\t\tsearchValues: '',\n        }\n\n        this.handleSearchChange = this.handleSearchChange.bind(this)\n        this.handleSearchSubmit = this.handleSearchSubmit.bind(this)\n    }\n\n    handleSearchChange(event) {\n\t\tthis.setState({\n\t\t\tsearchValues: event.target.value\n\t\t})\n\t}\n\n    handleSearchSubmit() {\n        console.log(this.props)\n        this.props.history.push({pathname: '/search', state: {searchValues: this.state.searchValues}})\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                    <a className=\"navbar-brand\" href=\"/\">Most Secure Site Ever</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"/\">Home</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"/Page1\">Page1</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"/Page2\">Page2</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"/MaintainancePortal\">Maintainance</a>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, {\n\tComponent\n} from 'react';\n\nimport {Container,Row,Col} from 'react-bootstrap';\n// import requests from '../util/requests.js';\nimport {\n\tdeclareTypeAlias\n} from '@babel/types';\n\nexport default class About extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttotal_issues: 0,\n\t\t\ttotal_commits: 0,\n\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// this.getAllCommits(axios)\n\t\t// this.getAllIssues(axios);\n\t\t// this.getUserIssues(axios)\n\t\t// this.getUserCommits(axios);\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"container text-center\">\n\t\t\t\t\t<h1 className=\"text-center\">Page 1</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, {\n\tComponent\n} from 'react';\n\nimport {Container,Row,Col} from 'react-bootstrap';\n// import requests from '../util/requests.js';\nimport {\n\tdeclareTypeAlias\n} from '@babel/types';\n\nexport default class About extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttotal_issues: 0,\n\t\t\ttotal_commits: 0,\n\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// this.getAllCommits(axios)\n\t\t// this.getAllIssues(axios);\n\t\t// this.getUserIssues(axios)\n\t\t// this.getUserCommits(axios);\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"container text-center\">\n\t\t\t\t\t<h1 className=\"text-center\">Page 2</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, {\n\tComponent\n} from 'react';\n// mysql -h unhackable-db.cl4q3xwzvwo6.us-east-1.rds.amazonaws.com -uadmin -p12345678\n// INSERT INTO users (account_id,plain_text_password,name) VALUES ('253153934829', 'football123', 'Mike');\n// 105; INSERT INTO users (account_id,plain_text_password,name) VALUES ('111111111111', '123', 'Miguel m');\n// \" or \"\"=\"\nimport {Container,Row,Col,Form,Button} from 'react-bootstrap';\n// import requests from '../util/requests.js';\nimport {\n\tdeclareTypeAlias\n} from '@babel/types';\n\nexport default class About extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvalue: '',\n\t\t\twelcome: ''\n\t\t};\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n\t}\n  handleSubmit(evt) {\n\t\tevt.preventDefault()\n\t\tif (this.state.value != ''){\n\t\t\tfetch('http://35.188.102.108:8080/getAccount/'+this.state.value)\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => {\n\t\t\t\tconsole.log(users);\n\t\t\t\tif (users.length == 0){\n\t\t\t\t\tthis.setState({welcome: 'Account ID not found'});\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tthis.setState({welcome: 'Welcome ' + users[0][\"name\"] + '!'});\n\t\t\t\t}\n\t\t\t})\n\t\t}\n    else {\n\t\t\tthis.setState({welcome: 'Enter Account ID'});\n\t\t}\n\t}\n  handleChange(evt) {\n    this.setState({value: evt.target.value});\n  }\n\tcomponentDidMount() {\n\t\t// this.getAllCommits(axios)\n\t\t// this.getAllIssues(axios);\n\t\t// this.getUserIssues(axios)\n\t\t// this.getUserCommits(axios);\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"container text-center\" style={{width: '40%'}}>\n\t\t\t\t\t<h1 className=\"text-center\">Maintainance Portal</h1>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\n              <Form.Label>Enter Account ID</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"12 digit account number\" onChange={this.handleChange}/>\n              <br/>\n              <Button variant=\"primary\" type=\"submit\">\n              Submit\n              </Button>\n            </Form.Group>\n          </Form>\n\t\t\t\t\t<h1 className=\"text-center\">{this.state.welcome}</h1>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Switch, Route, withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport logo from './logo.svg';\nimport './App.css';\nimport LandingPage from './pages/LandingPage';\nimport About from './pages/About';\nimport Navbar from './components/Navbar';\nimport Page1 from './pages/Page1'\nimport Page2 from './pages/Page2'\nimport Maintainance from './pages/Maintainance'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App Site\">\n        <div className=\"Site-content\">\n          <div className=\"Site-header\">\n            <Navbar history={this.props.history}/>\n          </div>\n          <div>\n            {/* <Router> */}\n              <div className=\"main\">\n                <Switch>\n                  <Route exact path=\"/\" component={LandingPage} />\n                  <Route path=\"/about\" component={About} />\n                  <Route path=\"/Page1\" component={Page1} />\n                  <Route path=\"/Page2\" component={Page2} />\n                  <Route path=\"/MaintainancePortal\" component={Maintainance} />\n                </Switch>\n              </div>\n            {/* </Router> */}\n          </div>\n        </div>\n\n      </div>\n\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router, Switch, Route, withRouter} from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}